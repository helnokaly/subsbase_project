// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using qna.DbContexts;

#nullable disable

namespace qna.Migrations
{
    [DbContext(typeof(QnaContext))]
    [Migration("20221018003552_DataSeed")]
    partial class DataSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("qna.Entities.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("QuestionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserId");

                    b.ToTable("Answers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Joe Biden",
                            QuestionId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            Description = "Cairo",
                            QuestionId = 2,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("qna.Entities.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Who is the president of the USA?",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "What is the captial of Egypt?",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("qna.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthId = "536fa4c1-bd09-4d71-9621-ea73d4e86bf3",
                            Password = "origin_of_species",
                            Username = "charles_darwin"
                        },
                        new
                        {
                            Id = 2,
                            AuthId = "e95b5712-1904-48c7-8658-3e76af36b280",
                            Password = "free_software",
                            Username = "richard_stallman"
                        },
                        new
                        {
                            Id = 3,
                            AuthId = "65dc1da2-6124-4b80-9bcf-c5941bbf7406",
                            Password = "penicillin",
                            Username = "alexander_fleming"
                        },
                        new
                        {
                            Id = 4,
                            AuthId = "2596c58b-591c-4422-a1da-82f3d4130c51",
                            Password = "unix",
                            Username = "ken_thompson"
                        },
                        new
                        {
                            Id = 5,
                            AuthId = "64b3ebc6-1cd5-4c27-9332-813bff01e936",
                            Password = "wonderland",
                            Username = "alice"
                        });
                });

            modelBuilder.Entity("qna.Entities.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnswerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("UserId");

                    b.ToTable("Votes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnswerId = 1,
                            UserId = 1,
                            Value = 1
                        },
                        new
                        {
                            Id = 2,
                            AnswerId = 2,
                            UserId = 2,
                            Value = -1
                        });
                });

            modelBuilder.Entity("qna.Entities.Answer", b =>
                {
                    b.HasOne("qna.Entities.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("qna.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");

                    b.Navigation("User");
                });

            modelBuilder.Entity("qna.Entities.Question", b =>
                {
                    b.HasOne("qna.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("qna.Entities.Vote", b =>
                {
                    b.HasOne("qna.Entities.Answer", "Answer")
                        .WithMany()
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("qna.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("qna.Entities.Question", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
